#!/usr/bin/env node
/**
 * Run tests on CI infrastructure.
 *
 * This script fires up meteor with ci-settings and runs chimp as soon as the
 * application is ready. If any test fails, the script exits with a non-zero
 * exit code.
 *
 * Test are loaded from the tests subdirectory. They must be implemented using
 * the Mocha syntax. The Chai library is used for assertions.
 *
 * Chimp test runner: https://github.com/xolvio/chimp
 * Mocha framework: https://mochajs.org/
 * Chai assertion lib: http://chaijs.com/
 *
 * This script heavily borrows from xolvio automated testing best practices:
 * https://github.com/xolvio/automated-testing-best-practices
 */

var extend = require('util')._extend;
var exec = require('child_process').exec;
var execFile = require('child_process').execFile;


function runChimp() {
	var proc = exec(
		'chimp --mocha --browser=phantomjs --ddp=http://localhost:3000 --path=tests --webdriverio.waitforTimeout=5000',
		{ env: extend({CI: 1}, process.env) }
    );

	proc.stdout.pipe(process.stdout);
	proc.stderr.pipe(process.stderr);

	return proc;
}


function runMeteor() {
	var proc = execFile(
		'meteor',
		[ '--production', '--settings=settings.ci.json' ]
	);

	proc.stdout.pipe(process.stdout);
	proc.stderr.pipe(process.stderr);

	return proc;
}


function runTests() {
  var meteor = runMeteor();

  var exit = function(code) {
	meteor.kill();
	process.exit(code);
  };

  meteor.stdout.on('data', function waitForMessage(data) {
    if (data.toString().match('App running at:')) {
      var chimp = runChimp();
      chimp.on('close', function(code) {
		exit(code);
      });
    }
  });
}

runTests();

